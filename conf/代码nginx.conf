body_filter_by_lua "
                --local h = ngx.resp.get_headers()
                --ngx.log(ngx.DEBUG, h['content-type'] or '')
                -- if string.find(h['content-type'] or '', 'text/html')==nil and string.find(h['content-type'] or '', 'text/plain')==nil then
                -- ngx.log(ngx.DEBUG, 100)
                --     return
                -- end
                -- ngx.log(ngx.DEBUG, 1)
                local chunk, eof = ngx.arg[1], ngx.arg[2]

                -- 定义全局变量，收集全部响应
                if ngx.ctx.buffered == nil then
                    ngx.ctx.buffered = {}
                end

                -- 如果非最后一次响应，将当前响应赋值
                if chunk ~= '' and not ngx.is_subrequest then
                    table.insert(ngx.ctx.buffered, chunk)

                    -- 将当前响应赋值为空，以修改后的内容作为最终响应
                    ngx.arg[1] = nil
                end

                -- 如果为最后一次响应，对所有响应数据进行处理
                if eof then
                    -- 获取所有响应数据
                    ngx.log(ngx.DEBUG, 2)
                    local whole = table.concat(ngx.ctx.buffered)
                    ngx.ctx.buffered = nil
                    -- 进行你所需要进行的处理
                    --whole = string.gsub(whole, 'href=\"/', 'href=\"/plugin_login/1/2')
                    --whole = string.gsub(whole, 'src=\"/', 'src=\"/plugin_login/1/2')
                    whole = string.gsub(whole, '\"/', '\"/plugin_login/1/2/')
                    --whole = string.gsub(whole, '([^\"/]*).js\"', '\"/plugin_login/1/2%1')
                    --whole = string.gsub(whole, '([^\"/]*).css\"', '\"/plugin_login/1/2%1')

                    -- whole = string.gsub(whole, '/assets/','/plugin_login/1/2/assets/')

                    -- 重新赋值响应数据，以修改后的内容作为最终响应
                    ngx.arg[1] = whole
                end
            ";



















            location / {
            set $routeurl '';
            set $routehost '';
rewrite_by_lua "
                ngx.log(ngx.DEBUG, ngx.req.get_headers()['referer'])
                local cookies = ngx.var.cookie_ncSession or ''
                if cookies == '' then
                    return
                end
                local userId = Split(cookies, '|')[1]
                local systemId = Split(cookies, '|')[2]
                ngx.log(ngx.DEBUG, userId)
                ngx.log(ngx.DEBUG, systemId)
                ngx.log(ngx.DEBUG, ngx.var.uri)
                if systemId == '2' then
                    ngx.req.set_header('cookie', 'sidebar_collapsed=false; SL_GWPT_Show_Hide_tmp=1; SL_wptGlobTipTmp=1; _gitlab_session=366dcc9986617407d3f12aafd605ffec')
                    --ngx.var.routeurl = 'http://git.db-kj.com'..ngx.var.uri
                    ngx.var.routehost = 'git.db-kj.com'
                else
                    ngx.req.set_header('cookie', 'BIDUPSID=E4B04E56463EFF126CAF21F1A0F4095A; PSTM=1618468239; ISSW=1; ISSW=1; BD_UPN=12314753; __yjs_duid=1_c73750046650c4c80995e605e9eb4f411618473960483; BDUSS=UgySmNiRTBacGZHR1BGb1RSUFRoNTVweVJIYUJKM2gxenlHeTZOR35sdU1zSjlnSVFBQUFBJCQAAAAAAAAAAAEAAADJph0OR29kVG9EdmVpbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIwjeGCMI3hgd; BDUSS_BFESS=UgySmNiRTBacGZHR1BGb1RSUFRoNTVweVJIYUJKM2gxenlHeTZOR35sdU1zSjlnSVFBQUFBJCQAAAAAAAAAAAEAAADJph0OR29kVG9EdmVpbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIwjeGCMI3hgd; BAIDUID=FA5773087FC9A428BBE28CC30F7E4915:FG=1; BDSFRCVID_BFESS=ta-OJeC62mF01tceYANEUF2yRe57zKRTH6aotbCRNuR4swKXleqKEG0PoM8g0KubigR-ogKKX2OTHIIF_2uxOjjg8UtVJeC6EG0Ptf8g0f5; H_BDCLCKID_SF_BFESS=fR-f_D_5fIvDqTrP-trf5DCShUFsb4DLB2Q-XPoO3K8WfxOkbj8bLx-AQG5a-4QiWKk8-UbgylRM8P3y0bb2DUA1y4vpKMrJLgTxoUJ2fnI2En7GqtOOe5tebPRiXTj9QgbAalQ7tt5W8ncFbT7l5hKpbt-q0x-jLTnhVn0MBCK0hD0wD5-2DTPO5pCX5-CsWCOd2hcHMPoosIJgMtKhbtAJ5to3-noaKCjiaKJjBMbUotoHe-LMh-kHjh3K-6vp5K6Qhq5TtUJMsK3bM4jPqt4bM4byKMniynr9-pnYWlQrh459XP68bTkA5bjZKxtq3mkjbPbDfn028DKuDjtBD5JQDNRabK6aKC5bL6rJabC3EU5MXU6q2bDeQN3ba4Dt5CJ3L4nSbPjDHJ6oyT3JXp0vWq54WbbvLT7johRTWqR4enj1WxonDh83QaJgat5lHCOOBqOO5hvvoKoO3M7zyfKmDloOW-TB5bbPLUQF5l8-sq0x0bOte-bQXH_EJ6-8tnAjoKvt-5rDHJTg5DTjhPrM5MDLWMT-MTryKKJe2R_heJRd5tvs5b_V-fciB5OMBanRh4oNB-3iV-OxDUvnyxAZbUQQXfQxtNRJKI3R2JQPKJ79MxbobUPUWa59LUvAWmcdot5yBbc8eIna5hjkbfJBQttjQn3hfIkj2CKLtDIbMCtCDT_3h-0Q-fJ-etJQa5TbQnTKa--_Ht5mM-r_bDCShUFs-P_LB2Q-5KL-alL2htbnbqrNXxLAQG58QtLtJ5QibfbdJJjofboJ0xTh060y5PRv2PQDW2TxoUJOBCnJhhvG-4rJ0CuebPRiXTj9QgbAalQ7tt5W8ncFbT7l5hKpbt-q0x-jLTnhVn0M5DK0HPonHjLMj55y3f; BDORZ=B490B5EBF6F3CD402E515D22BCDA1598; ab_sr=1.0.1_YTM4MTM4ZmIwZGI5YjE5ZTM0OWZlMGQ2MmUwNTdkNmM1MTczNWY0ZWI1NjczMzM0YTI5OTdmNDUxZDg1OGNmNGM5ZjBjMTdkM2ViMzA3NjhlMjVlNTk1N2ZjYjZhYzJjZjcwN2ZmZTQ4MzU2NWNjZDMyZGU3NTk1NTAyY2ZhYjM5MTViNTc2ZmIwYjJjOWIxNDIxZmFhNjZlMWMwYzU5ODgxYmU1Njc4YmExZGNjNTM1ODhkMmM2MjQxM2Q5ZThi; H_PS_PSSID=33801_34222_31254_34228_34004_34073_34135_26350_34241; SL_GWPT_Show_Hide_tmp=1; SL_wptGlobTipTmp=1; delPer=0; BD_CK_SAM=1; PSINO=7; sug=3; sugstore=1; bdime=0; H_PS_645EC=744aCgUfcuMfnq26CfMFxViygeUGktaK4RyKJm7%2FGdew9YtHR1BtY%2B91%2Bkk; BA_HECTOR=850h818k2k25ag8g0o1gehmup0r; ORIGIN=2; BDSVRTM=0')
                    --ngx.var.routeurl = 'https://www.baidu.com'..ngx.var.uri
                    ngx.var.routehost = 'www.baidu.com'
                end
            ";
            proxy_set_header Host $routehost;
            proxy_pass $scheme://$routehost$request_uri;
            
        }















        <meta charset=\"utf-8\"><base href=\"http://127.0.0.1:11223/plugin_login/1/2/\" />